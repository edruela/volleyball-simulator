name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Format check with black
      run: |
        black --check --diff .
    
    - name: Type check with mypy
      run: |
        mypy . --ignore-missing-imports
    
    - name: Test with pytest
      run: |
        pytest --cov=. --cov-report=html --cov-report=term-missing --cov-report=xml
    
    - name: Coverage report summary
      run: |
        echo "Coverage report generated in htmlcov/ directory"
        echo "To view locally: python -m http.server 8000 --directory htmlcov"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4

    - name: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}' 

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'
      with:
        version: '>= 363.0.0'
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    
    - name: Configure Docker to use gcloud as credential helper
      run: |
        gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
    
    - name: Build Docker image
      run: |
        docker build -t us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/volleyball-simulator/volleyball-simulator:${{ github.sha }} .
        docker build -t us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/volleyball-simulator/volleyball-simulator:latest .
    
    - name: Push Docker image
      run: |
        docker push us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/volleyball-simulator/volleyball-simulator:${{ github.sha }}
        docker push us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/volleyball-simulator/volleyball-simulator:latest
    
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy volleyball-simulator \
          --image us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/volleyball-simulator/volleyball-simulator:${{ github.sha }} \
          --platform managed \
          --region us-central1 \
          --allow-unauthenticated \
          --memory 512Mi \
          --cpu 1 \
          --max-instances 10 \
          --timeout 300 \
          --port 8080 \
          --set-env-vars FIREBASE_ADMIN_KEY="${{ secrets.FIREBASE_ADMIN_KEY }}"
